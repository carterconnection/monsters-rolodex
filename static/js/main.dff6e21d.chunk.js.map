{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/card/card-family.component.jsx","components/card-list/card-list-family.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","phone","CardList","monsters","map","CardFamily","family","CardListFamily","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","filteredFamily","fam","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,OACA,8BAAMP,EAAMI,QAAQI,YCNfC,G,KAAW,SAACT,GAAD,OAEpB,qBAAKC,UAAU,YAAf,SACKD,EAAMU,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNlBO,EAAa,SAACZ,GAAD,OACtB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMa,OAAOP,KAAvC,oBAEP,mCAAMN,EAAMa,OAAOP,KAAnB,WCJKQ,EAAiB,SAACd,GAAD,OAE1B,qBAAKC,UAAU,YAAf,SACKD,EAAMa,OAAOF,KAAI,SAAAE,GAAM,OACpB,cAAC,EAAD,CAA4BA,OAAQA,GAAnBA,EAAOR,UCNvBU,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIhB,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCyEHG,G,wDA3Eb,aAAe,IAAD,8BACZ,gBA4CFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SA3CtC,EAAKC,MAAQ,CACXH,YAAa,GACbb,SAAU,GACVG,OAAQ,CACN,CACER,GAAI,QACJC,KAAM,gBAER,CACED,GAAI,UACJC,KAAM,iBAER,CACED,GAAI,SACJC,KAAM,kBAER,CACED,GAAI,UACJC,KAAM,mBAER,CACED,GAAI,YACJC,KAAM,mBAzBA,E,qDAoCd,WAAqB,IAAD,OAElBqB,MAAM,8CAEHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEZ,SAAUqB,S,oBAO7C,WAAU,IAAD,EACmCC,KAAKN,MAAvChB,EADD,EACCA,SAAUG,EADX,EACWA,OAAQU,EADnB,EACmBA,YACpBU,EAAmBvB,EAASwB,QAAO,SAAA9B,GAAO,OAC9CA,EAAQE,KAAK6B,cAAcC,SAASb,EAAYY,kBAE5CE,EAAiBxB,EAAOqB,QAAO,SAAAI,GAAG,OACtCA,EAAIhC,KAAK6B,cAAcC,SAASb,EAAYY,kBAG9C,OACE,sBAAKlC,UAAU,MAAf,UACE,kDAEA,cAAC,EAAD,CACEe,YAAY,gBACZC,aAAce,KAAKf,eAGrB,cAAC,EAAD,CAAUP,SAAUuB,IAEpB,cAAC,EAAD,CAAgBpB,OAAQwB,W,GAtEdE,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dff6e21d.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../card/card.style.css';\n\nexport const Card = (props) => (\n    <div className=\"card-container\">\n        <img \n            alt=\"monster\" \n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} \n        />\n        <h2> {props.monster.name} </h2>\n        <p> {props.monster.email} </p>\n        <div>{props.monster.phone}</div>\n    </div>\n)","import React from 'react';\n\nimport { Card } from '../card/card.component';\n\nimport './card-list.style.css';\n\nexport const CardList = (props) => (\n    \n    <div className='card-list'>            \n        {props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster} />\n        ))}    \n    </div>\n);","import React from 'react';\n\nimport '../card/card.style.css';\n\nexport const CardFamily = (props) => (\n    <div className=\"card-container\">\n        <img \n            alt=\"monster\" \n            src={`https://robohash.org/${props.family.name}?&size=180x180`}\n        />\n        <h1> {props.family.name} </h1>        \n    </div>\n)","import React from 'react';\n\nimport { CardFamily } from '../card/card-family.component';\n\nimport './card-list.style.css';\n\nexport const CardListFamily = (props) => (\n    \n    <div className='card-list'>            \n        {props.family.map(family => (\n            <CardFamily key={family.id} family={family} />\n        ))}    \n    </div>\n);","import React from 'react';\n\nimport './search-box.style.css';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input\n        className='search'\n        type='search'\n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n)\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { CardListFamily } from './components/card-list/card-list-family.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      searchField: '',\n      monsters: [],\n      family: [\n        {\n          id: 'car12',\n          name: 'Falon Carter'\n        },\n        {\n          id: 'car9872',\n          name: 'Nyasia Carter'\n        },\n        {\n          id: 'car324',\n          name: 'Branden Carter'\n        },\n        {\n          id: 'car2347',\n          name: 'Clarence Carter'\n        },\n        {\n          id: 'car254652',\n          name: 'Teddie Battle'\n        }\n        \n      ]\n    }\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  // lifecycle method\n  // when component does mount  - other words when the page is given the new data. Or when the page is refreshed\n  componentDidMount() {\n    // grab user list from this api end\n    fetch('https://jsonplaceholder.typicode.com/users')\n      // turn response intro a readable json object\n      .then(response => response.json())\n      // set our monsters (within our state) to our new list our users grabbed from the api end\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, family, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    const filteredFamily = family.filter(fam =>\n      fam.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n\n        <SearchBox \n          placeholder='search fucker' \n          handleChange={this.handleChange} \n        />\n\n        <CardList monsters={filteredMonsters} />\n\n        <CardListFamily family={filteredFamily} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}